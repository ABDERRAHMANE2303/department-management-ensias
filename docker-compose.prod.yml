services:
  # Database
  db:
    image: postgres:17-alpine
    container_name: ensias-db-prod
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - ensias_prod_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Service
  admin:
    image: ${DOCKER_USERNAME}/ensias-deps:admin-latest
    container_name: ensias-admin-prod
    # REMOVED external port - nginx handles this
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      FILE_UPLOAD_DIR: ${UPLOAD_DIR}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ensias_prod_network
    restart: unless-stopped

  # Auth Service
  auth:
    image: ${DOCKER_USERNAME}/ensias-deps:auth-latest
    container_name: ensias-auth-prod
    # REMOVED external port - nginx handles this
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      SPRING_PROFILES_ACTIVE: prod
      FILE_UPLOAD_DIR: ${UPLOAD_DIR}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ensias_prod_network
    restart: unless-stopped

  # Chef Department Service
  chef-dep:
    image: ${DOCKER_USERNAME}/ensias-deps:chef-dep-latest
    container_name: ensias-chef-dep-prod
    # REMOVED external port - nginx handles this
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      FILE_UPLOAD_DIR: ${UPLOAD_DIR}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ensias_prod_network
    restart: unless-stopped

  # Professor Department Service
  prof-dep:
    image: ${DOCKER_USERNAME}/ensias-deps:prof-dep-latest
    container_name: ensias-prof-dep-prod
    # REMOVED external port - nginx handles this
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      FILE_UPLOAD_DIR: ${UPLOAD_DIR}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ensias_prod_network
    restart: unless-stopped

  # Chef Filiere Service
  chef-fil:
    image: ${DOCKER_USERNAME}/ensias-deps:chef-fil-latest
    container_name: ensias-chef-fil-prod
    # REMOVED external port - nginx handles this
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      FILE_UPLOAD_DIR: ${UPLOAD_DIR}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ensias_prod_network
    restart: unless-stopped

  # Frontend
  frontend:
    image: ${DOCKER_USERNAME}/ensias-deps:frontend-latest
    container_name: ensias-frontend-prod
    # REMOVED external port - nginx handles this
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=https://${PUBLIC_IP}
    depends_on:
      - admin
      - auth
      - chef-dep
      - prof-dep
      - chef-fil
    networks:
      - ensias_prod_network
    restart: unless-stopped

  # HTTPS Reverse Proxy
  nginx-ssl:
    image: nginx:alpine
    container_name: nginx-ssl-proxy
    ports:
      - "80:80"   # HTTP (redirects to HTTPS)
      - "443:443" # HTTPS - MAIN ENTRY POINT
    volumes:
      - ./nginx-ssl/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-ssl/cert.pem:/etc/nginx/ssl/cert.pem:ro
      - ./nginx-ssl/key.pem:/etc/nginx/ssl/key.pem:ro
    depends_on:
      - frontend
      - admin
      - auth
      - chef-dep
      - prof-dep
      - chef-fil
    networks:
      - ensias_prod_network
    restart: unless-stopped

networks:
  ensias_prod_network:
    driver: bridge
    name: ensias_prod_network

volumes:
  postgres_data_prod:
    name: ensias_postgres_data_prod
