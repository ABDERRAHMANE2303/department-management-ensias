name: ENSIAS Departments Management CI

# Trigger on pull requests to main branch only
on:
  pull_request:
    branches: [main]

jobs:
  # Job 1: Setup and build common-models (dependency for other services)
  build-common:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install parent POM
        run: |
          cd Back-End
          mvn clean install -N

      - name: Build and install common-models
        run: |
          cd Back-End/common-models
          mvn clean install -DskipTests

      - name: Test common-models
        run: |
          cd Back-End/common-models
          mvn test

      - name: Cache built common-models
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository/com/departement
          key: ${{ runner.os }}-common-models-${{ github.sha }}

  # Job 2: Test backend services in parallel
  test-backend-services:
    runs-on: ubuntu-latest
    needs: build-common
    strategy:
      matrix:
        service: [admin, auth, chef-dep, prof-dep]
      fail-fast: false  # Continue testing other services even if one fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Restore Maven dependencies cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Restore built common-models
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository/com/departement
          key: ${{ runner.os }}-common-models-${{ github.sha }}

      - name: Test ${{ matrix.service }} service
        run: |
          cd Back-End/${{ matrix.service }}
          mvn test

      - name: Upload test results for ${{ matrix.service }}
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if tests fail
        with:
          name: test-results-${{ matrix.service }}
          path: Back-End/${{ matrix.service }}/target/surefire-reports/

  # Job 3: Test frontend
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        run: |
          cd Front-End
          npm ci

      - name: Build frontend
        run: |
          cd Front-End
          npm run build

      - name: Run frontend tests (if any)
        run: |
          cd Front-End
          # Add npm test here when you have frontend tests
          echo "Frontend tests would run here"

  # Job 4: CI Summary and status check
  ci-summary:
    runs-on: ubuntu-latest
    needs: [build-common, test-backend-services, test-frontend]
    if: always()  # Run even if some tests fail

    steps:
      - name: Check CI Results
        run: |
          echo "üîç CI Results Summary:"
          echo "‚úÖ Common models build: ${{ needs.build-common.result }}"
          echo "‚úÖ Backend services tests: ${{ needs.test-backend-services.result }}"
          echo "‚úÖ Frontend build: ${{ needs.test-frontend.result }}"
          
          # Fail the job if any critical step failed
          if [[ "${{ needs.build-common.result }}" != "success" || 
                "${{ needs.test-backend-services.result }}" != "success" || 
                "${{ needs.test-frontend.result }}" != "success" ]]; then
            echo "‚ùå CI failed - PR should not be merged"
            exit 1
          else
            echo "‚úÖ All CI checks passed - PR is ready for review"
          fi
