name: ENSIAS Departments CD

# Trigger on push to main (after PR merge)
on:
  push:
    branches: [main]

jobs:
  # Job 1: Build and Push Backend Services
  build-and-push-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [common-models, admin, auth, chef-dep, prof-dep]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.service }}
        run: |
          cd Back-End/${{ matrix.service }}
          docker build -f Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/ensias-deps/${{ matrix.service }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/ensias-deps/${{ matrix.service }}:latest

  # Job 2: Build and Push Frontend
  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend
        run: |
          cd Front-End
          docker build -f Dockerfile.prod -t ${{ secrets.DOCKER_USERNAME }}/ensias-deps/frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/ensias-deps/frontend:latest

  # Job 3: Deploy to VM
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push-backend, build-and-push-frontend]
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.OCI_HOST }}
          username: ubuntu
          key: ${{ secrets.OCI_SSH_KEY }}
          script: |
            # Navigate to project directory
            cd ~/ensias-departments-platform
            
            # Pull latest code
            git pull origin main
            
            # Create .env file from secrets
            cat > .env << EOF
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=5432
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION=86400000
            SPRING_DEVTOOLS_RESTART_ENABLED=false
            SPRING_DEVTOOLS_LIVERELOAD_ENABLED=false
            UPLOAD_DIR=./uploads
            EOF
            
            # Pull latest Docker images
            docker-compose -f docker-compose.prod.yml pull
            
            # Restart services with latest code and images
            docker-compose -f docker-compose.prod.yml up -d
            
            # Clean up old images
            docker image prune -f